apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: nifi
spec:
  serviceName: nifi
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nifi
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - nifi
              topologyKey: "kubernetes.io/hostname"
    spec:
      containers:
      - env:
        - name: NIFI_CLUSTER_IS_NODE
          value: "true"
        - name: NIFI_CLUSTER_NODE_PROTOCOL_PORT
          value: "8082"
        - name: NIFI_ELECTION_MAX_WAIT
          value: 1 min4
        - name: NIFI_WEB_HTTP_PORT
          value: "8080"
        - name: NIFI_ZK_CONNECT_STRING
          value: zk-0.zk-hs.default.svc.cluster.local:2888:3888
        image: apache/nifi:latest
        name: nifi
        ports:
          - containerPort: 8080
          - containerPort: 8081
          - containerPort: 8443
          - containerPort: 2882
        volumeMounts:
          - name: flowfilerepository
            mountPath: /opt/nifi/flowfile_repository
          - name: databaserepository
            mountPath: /opt/nifi/database_repository
          - name: contentrepository
            mountPath: /opt/nifi/content_repository
          - name: provenancerepository
            mountPath: /opt/nifi/provenance_repository
        
  volumeClaimTemplates:
  - metadata:
      name: flowfilerepository
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
  - metadata:
      name: databaserepository
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
  - metadata:
      name: contentrepository
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
  - metadata:
      name: provenancerepository
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
      storageClassName: standard
